{
  "$schema": "http://json-schema.org/draft-06/schema#",
  "$ref": "#/definitions/suite",

  "definitions": {
    "suite": {
      "type": "object",
      "additionalProperties": true,
      "properties": {
        "name": {
          "type": "string",
          "description": "The suite name."
        },
        "tests": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Test"
          },
          "description": "An array of test objects."
        }
      },
      "required": [
        "name",
        "tests"
      ],
      "title": "suite",
      "description": "Defines a suite of tests."
    },
    "Test": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "only": {
          "type": "boolean",
          "description": "Indicates if only this test should be run."
        },
        "name": {
          "type": "string",
          "description": "The name of the test."
        },
        "categories": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Categories associated with the test."
        },
        "headers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Header"
          },
          "description": "Headers to be sent with the test request."
        },
        "actions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Action"
          },
          "description": "Actions to be performed during the test."
        },
        "responseActions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseAction"
          },
          "description": "Actions to be performed on the response of the test."
        }
      },
      "required": [
        "name",
        "categories",
        "headers",
        "actions",
        "responseActions"
      ],
      "title": "Test",
      "description": "Defines a single test within a suite."
    },
    "Header": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the header."
        },
        "value": {
          "type": "string",
          "description": "The value of the header."
        }
      },
      "required": [
        "name",
        "value"
      ],
      "title": "Header",
      "description": "Defines a header to be sent with a test request."
    },
    "Action": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "methodName": {
          "type": "string",
          "description": "The HTTP method name for the action."
        },
        "url": {
          "type": "string",
          "description": "The URL for the action."
        },
        "body": {
          "type": ["string", "null"],
          "description": "The body content for the action."
        },
        "params": {
          "type": ["array", "null"],
          "items": {
            "$ref": "#/definitions/Param"
          },
          "description": "Parameters for the action."
        }
      },
      "required": [
        "methodName",
        "url"
      ],
      "title": "Action",
      "description": "Defines an action to be performed during a test."
    },
    "ResponseAction": {
      "type": "object",
      "properties": {
        "method": {
          "type": "string",
          "enum": ["assert.response-time-is-below", "assert.response-time-is-above", "assert.status-code-equals", "assert.status-code-is-success", "assert.status-code-is-client-error", "assert.status-code-is-server-error", "assert.header-exists", "assert.header-value-equals", "assert.content-type-is-json", "assert.content-type-is-xml", "assert.content-type-is-html", "assert.cookie-exists", "assert.cookie-value-equals", "assert.cookie-is-secured", "assert.cookie-is-not-secured", "assert.body-equals", "assert.body-contains-text", "assert.body-is-empty", "assert.body-is-not-empty", "assert.body-length-equals", "assert.body-starts-with", "assert.body-ends-with", "assert.body-matches-regex", "assert.body-is-json-array", "assert.body-is-json-object", "assert.body-json-path-exists", "log.error", "log.warn", "log.info", "log.debug", "extractJson.string-from-list"],
          "description": "The method to be used for the response action."
        }
      },
      "patternProperties": {
        "^[a-zA-Z_][a-zA-Z0-9_]*$": {
          "type": "string"
        }
      },
      "dependencies": {
        "method": {
          "oneOf": [
            {
              "properties": {
                "method": {
                  "const": "log.info"
                }
              },
              "required": ["message"]
            },
            {
              "properties": {
                "method": {
                  "const": "assert.status-code-equals"
                }
              },
              "required": ["code"]
            },
            {
              "properties": {
                "method": {
                  "const": "assert.body-contains"
                }
              },
              "required": ["body"]
            },
            {
              "properties": {
                "method": {
                  "const": "extractJson.string-from-list"
                }
              },
              "required": ["cacheKey", "listIndex", "jsonKey", "cacheLevel"]
            },
            {
              "not": {
                "anyOf": [
                  {
                    "properties": {
                      "method": {
                        "const": "log.info"
                      }
                    }
                  },
                  {
                    "properties": {
                      "method": {
                        "const": "assert.status-code-equals"
                      }
                    }
                  },
                  {
                    "properties": {
                      "method": {
                        "const": "assert.body-contains"
                      }
                    }
                  },
                  {
                    "properties": {
                      "method": {
                        "const": "extractJson.string-from-list"
                      }
                    }
                  }
                ]
              }
            }
          ]
        }
      },
      "required": [
        "method"
      ],
      "title": "ResponseAction",
      "description": "Defines an action to be performed on the response of a test."
    },
    "Param": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the parameter."
        },
        "value": {
          "type": "string",
          "description": "The value of the parameter."
        }
      },
      "required": [
        "name",
        "value"
      ],
      "title": "Param",
      "description": "Defines a parameter for an action."
    }
  }
}
